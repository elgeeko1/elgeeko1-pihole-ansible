---
- name: Docker pull pihole/pihole:{{ pihole_docker_tag }}
  community.general.docker_image:
    name: pihole/pihole:{{ pihole_docker_tag }}
    source: pull
    force_source: true

- name: Configure Docker macvlan network {{ pihole_network_macvlan.name }}
  when: pihole_network_mode == 'macvlan'
  community.general.docker_network:
    name: "{{ pihole_network_macvlan.name }}"
    driver: macvlan
    driver_options:
      macvlan_mode: private
      parent: "{{ pihole_network_macvlan.interface }}"
    ipam_config:
      - subnet: "{{ pihole_network_macvlan.subnet }}"
        gateway: "{{ pihole_network_macvlan.gateway }}"

- name: Create persistent volume pihole-data
  community.docker.docker_volume:
    name: pihole-data

- name: Create persistent volume pihole-dnsmasq
  community.docker.docker_volume:
    name: pihole-dnsmasq

- name: Start pihole docker container
  community.general.docker_container:
    name: pihole
    image: pihole/pihole:{{ pihole_docker_tag }}
    state: started
    restart_policy: unless-stopped
    comparisons:
      '*': strict
    keep_volumes: false
    hostname: "{{ inventory_hostname }}"
    volumes:
      - pihole-data:/etc/pihole
      - pihole-dnsmaq:/etc/dnsmasq.d
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    ports: "{{ (pihole_network_mode == 'bridge') | ternary(pihole_published_ports, []) }}"
    networks: "{{ (pihole_network_mode == 'macvlan') | ternary( \
        [{'name': pihole_network_macvlan.name, 'ipv4_address': pihole_network_macvlan.ipv4_address}], \
        [{'name': pihole_network_mode }]  ) }}"
    capabilities:
      - CAP_NET_BIND_SERVICE  # allow FTLDNS to bind to 53
      - CAP_SYS_NICE # prioritize CPU resources
    env:
      FTLCONF_webserver_api_password: "{{ pihole_web_password }}"
      FTLCONF_dns_listeningMode: "all"
      FTLCONF_dns_upstreams: "{{ pihole_upstream_dns }}"
      FTLCONF_dns_dnssec: "{{ pihole_dnssec | string }}"
      FTLCONF_dns_queryLogging: "{{ pihole_query_logging | string }}"
      FTLCONF_misc_privacylevel: "{{ pihole_privacy_level | string}}"
      TZ: "{{ pihole_timezone }}"
    log_driver: "local"  # default doesn't log rotate

# - name: Wait for pihole dns service to start
#   ansible.builtin.wait_for:
#     port: "{{ pihole_host_dns_port }}"
#     timeout: 10

# - name: Wait for pihole web service to start
#   ansible.builtin.wait_for:
#     port: "{{ pihole_host_web_port }}"
#     timeout: 10
